// utils/globalAuthState.ts
class GlobalAuthState {
    private isInitialized: boolean = false;
    private isCheckingAuth: boolean = false;
    private lastCheckTime: number = 0;
    private readonly checkCooldown: number = 5000; // 5 saniye cooldown
   
    setInitialized(value: boolean): void {
      this.isInitialized = value;
      console.log('üîÑ Global auth initialized:', value);
    }
   
    canCheckAuth(): boolean {
      const now = Date.now();
      const timeSinceLastCheck = now - this.lastCheckTime;
      
      if (this.isCheckingAuth) {
        console.log('‚ö†Ô∏è Auth kontrol√º zaten devam ediyor, atlanƒ±yor');
        return false;
      }
      
      if (this.isInitialized && timeSinceLastCheck < this.checkCooldown) {
        console.log(`‚ö†Ô∏è Auth kontrol√º √ßok yakƒ±n zamanda yapƒ±ldƒ± (${timeSinceLastCheck}ms), atlanƒ±yor`);
        return false;
      }
      
      return true;
    }
   
    startAuthCheck(): void {
      this.isCheckingAuth = true;
      this.lastCheckTime = Date.now();
      console.log('üöÄ Auth kontrol√º ba≈ülatƒ±lƒ±yor...');
    }
   
    finishAuthCheck(): void {
      this.isCheckingAuth = false;
      this.isInitialized = true;
      console.log('‚úÖ Auth kontrol√º tamamlandƒ±');
    }
   
    reset(): void {
      this.isInitialized = false;
      this.isCheckingAuth = false;
      this.lastCheckTime = 0;
      console.log('üîÑ Global auth state resetlendi');
    }
   }
   
   const globalAuthState = new GlobalAuthState();
   export default globalAuthState;